// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: clairvoyant.proto

package clairvoyant

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Edge Service interface
type NodeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId      string  `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	NodeIp      string  `protobuf:"bytes,2,opt,name=node_ip,json=nodeIp,proto3" json:"node_ip,omitempty"`
	ArrivalTime float64 `protobuf:"fixed64,3,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	ContactTime float64 `protobuf:"fixed64,4,opt,name=contact_time,json=contactTime,proto3" json:"contact_time,omitempty"`
	//Fill other useful info
	ContactPoints []*Coordinate `protobuf:"bytes,5,rep,name=contact_points,json=contactPoints,proto3" json:"contact_points,omitempty"`
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{0}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetNodeIp() string {
	if x != nil {
		return x.NodeIp
	}
	return ""
}

func (x *NodeInfo) GetArrivalTime() float64 {
	if x != nil {
		return x.ArrivalTime
	}
	return 0
}

func (x *NodeInfo) GetContactTime() float64 {
	if x != nil {
		return x.ContactTime
	}
	return 0
}

func (x *NodeInfo) GetContactPoints() []*Coordinate {
	if x != nil {
		return x.ContactPoints
	}
	return nil
}

type Segment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentId   string `protobuf:"bytes,1,opt,name=segment_id,json=segmentId,proto3" json:"segment_id,omitempty"`
	SegmentSize int32  `protobuf:"varint,2,opt,name=segment_size,json=segmentSize,proto3" json:"segment_size,omitempty"`
	SegmentName string `protobuf:"bytes,3,opt,name=segment_name,json=segmentName,proto3" json:"segment_name,omitempty"`
}

func (x *Segment) Reset() {
	*x = Segment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Segment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Segment) ProtoMessage() {}

func (x *Segment) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Segment.ProtoReflect.Descriptor instead.
func (*Segment) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{1}
}

func (x *Segment) GetSegmentId() string {
	if x != nil {
		return x.SegmentId
	}
	return ""
}

func (x *Segment) GetSegmentSize() int32 {
	if x != nil {
		return x.SegmentSize
	}
	return 0
}

func (x *Segment) GetSegmentName() string {
	if x != nil {
		return x.SegmentName
	}
	return ""
}

type SegmentOwner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Segment  *Segment  `protobuf:"bytes,1,opt,name=segment,proto3" json:"segment,omitempty"`
	NodeInfo *NodeInfo `protobuf:"bytes,2,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
}

func (x *SegmentOwner) Reset() {
	*x = SegmentOwner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SegmentOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SegmentOwner) ProtoMessage() {}

func (x *SegmentOwner) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SegmentOwner.ProtoReflect.Descriptor instead.
func (*SegmentOwner) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{2}
}

func (x *SegmentOwner) GetSegment() *Segment {
	if x != nil {
		return x.Segment
	}
	return nil
}

func (x *SegmentOwner) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

//Cloud service interface
type Coordinate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X        float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y        float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Speed    float64 `protobuf:"fixed64,3,opt,name=speed,proto3" json:"speed,omitempty"`
	Time     float64 `protobuf:"fixed64,4,opt,name=time,proto3" json:"time,omitempty"`
	Distance float64 `protobuf:"fixed64,5,opt,name=distance,proto3" json:"distance,omitempty"`
}

func (x *Coordinate) Reset() {
	*x = Coordinate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coordinate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coordinate) ProtoMessage() {}

func (x *Coordinate) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coordinate.ProtoReflect.Descriptor instead.
func (*Coordinate) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{3}
}

func (x *Coordinate) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Coordinate) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Coordinate) GetSpeed() float64 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *Coordinate) GetTime() float64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *Coordinate) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RouteId int32         `protobuf:"varint,1,opt,name=route_id,json=routeId,proto3" json:"route_id,omitempty"`
	Points  []*Coordinate `protobuf:"bytes,2,rep,name=points,proto3" json:"points,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{4}
}

func (x *Route) GetRouteId() int32 {
	if x != nil {
		return x.RouteId
	}
	return 0
}

func (x *Route) GetPoints() []*Coordinate {
	if x != nil {
		return x.Points
	}
	return nil
}

type VideoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId   string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	Route     *Route `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *VideoRequest) Reset() {
	*x = VideoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoRequest) ProtoMessage() {}

func (x *VideoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoRequest.ProtoReflect.Descriptor instead.
func (*VideoRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{5}
}

func (x *VideoRequest) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *VideoRequest) GetRoute() *Route {
	if x != nil {
		return x.Route
	}
	return nil
}

func (x *VideoRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type VideoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId int64    `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Urls    []string `protobuf:"bytes,2,rep,name=urls,proto3" json:"urls,omitempty"`
}

func (x *VideoReply) Reset() {
	*x = VideoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoReply) ProtoMessage() {}

func (x *VideoReply) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoReply.ProtoReflect.Descriptor instead.
func (*VideoReply) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{6}
}

func (x *VideoReply) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *VideoReply) GetUrls() []string {
	if x != nil {
		return x.Urls
	}
	return nil
}

type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{7}
}

func (x *StatusReply) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MissedDeliveryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId   int64      `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Segments  []*Segment `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	NodeId    string     `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *MissedDeliveryRequest) Reset() {
	*x = MissedDeliveryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MissedDeliveryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MissedDeliveryRequest) ProtoMessage() {}

func (x *MissedDeliveryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MissedDeliveryRequest.ProtoReflect.Descriptor instead.
func (*MissedDeliveryRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{8}
}

func (x *MissedDeliveryRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *MissedDeliveryRequest) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *MissedDeliveryRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *MissedDeliveryRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type DownloadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId        int64             `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	Segments       []*Segment        `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	SegmentSources map[string]string `protobuf:"bytes,3,rep,name=segment_sources,json=segmentSources,proto3" json:"segment_sources,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ArrivalTime    int64             `protobuf:"varint,4,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`
	ContactTime    float64           `protobuf:"fixed64,5,opt,name=contact_time,json=contactTime,proto3" json:"contact_time,omitempty"`
	ContactPoints  []*Coordinate     `protobuf:"bytes,6,rep,name=contact_points,json=contactPoints,proto3" json:"contact_points,omitempty"`
}

func (x *DownloadRequest) Reset() {
	*x = DownloadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadRequest) ProtoMessage() {}

func (x *DownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadRequest.ProtoReflect.Descriptor instead.
func (*DownloadRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *DownloadRequest) GetSegments() []*Segment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *DownloadRequest) GetSegmentSources() map[string]string {
	if x != nil {
		return x.SegmentSources
	}
	return nil
}

func (x *DownloadRequest) GetArrivalTime() int64 {
	if x != nil {
		return x.ArrivalTime
	}
	return 0
}

func (x *DownloadRequest) GetContactTime() float64 {
	if x != nil {
		return x.ContactTime
	}
	return 0
}

func (x *DownloadRequest) GetContactPoints() []*Coordinate {
	if x != nil {
		return x.ContactPoints
	}
	return nil
}

type DownloadReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenId    int64    `protobuf:"varint,1,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	SegmentIds []string `protobuf:"bytes,2,rep,name=segment_ids,json=segmentIds,proto3" json:"segment_ids,omitempty"`
}

func (x *DownloadReply) Reset() {
	*x = DownloadReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadReply) ProtoMessage() {}

func (x *DownloadReply) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadReply.ProtoReflect.Descriptor instead.
func (*DownloadReply) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{10}
}

func (x *DownloadReply) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *DownloadReply) GetSegmentIds() []string {
	if x != nil {
		return x.SegmentIds
	}
	return nil
}

type DownloadCompleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SegmentIds []string `protobuf:"bytes,1,rep,name=segment_ids,json=segmentIds,proto3" json:"segment_ids,omitempty"`
	NodeId     string   `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
}

func (x *DownloadCompleteRequest) Reset() {
	*x = DownloadCompleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadCompleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadCompleteRequest) ProtoMessage() {}

func (x *DownloadCompleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadCompleteRequest.ProtoReflect.Descriptor instead.
func (*DownloadCompleteRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{11}
}

func (x *DownloadCompleteRequest) GetSegmentIds() []string {
	if x != nil {
		return x.SegmentIds
	}
	return nil
}

func (x *DownloadCompleteRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

type CVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*CVRequest_Videorequest
	//	*CVRequest_Misseddeliveryrequest
	//	*CVRequest_Downloadcompleterequest
	Request isCVRequest_Request `protobuf_oneof:"request"`
}

func (x *CVRequest) Reset() {
	*x = CVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVRequest) ProtoMessage() {}

func (x *CVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVRequest.ProtoReflect.Descriptor instead.
func (*CVRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{12}
}

func (m *CVRequest) GetRequest() isCVRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *CVRequest) GetVideorequest() *VideoRequest {
	if x, ok := x.GetRequest().(*CVRequest_Videorequest); ok {
		return x.Videorequest
	}
	return nil
}

func (x *CVRequest) GetMisseddeliveryrequest() *MissedDeliveryRequest {
	if x, ok := x.GetRequest().(*CVRequest_Misseddeliveryrequest); ok {
		return x.Misseddeliveryrequest
	}
	return nil
}

func (x *CVRequest) GetDownloadcompleterequest() *DownloadCompleteRequest {
	if x, ok := x.GetRequest().(*CVRequest_Downloadcompleterequest); ok {
		return x.Downloadcompleterequest
	}
	return nil
}

type isCVRequest_Request interface {
	isCVRequest_Request()
}

type CVRequest_Videorequest struct {
	Videorequest *VideoRequest `protobuf:"bytes,1,opt,name=videorequest,proto3,oneof"`
}

type CVRequest_Misseddeliveryrequest struct {
	Misseddeliveryrequest *MissedDeliveryRequest `protobuf:"bytes,2,opt,name=misseddeliveryrequest,proto3,oneof"`
}

type CVRequest_Downloadcompleterequest struct {
	Downloadcompleterequest *DownloadCompleteRequest `protobuf:"bytes,3,opt,name=downloadcompleterequest,proto3,oneof"`
}

func (*CVRequest_Videorequest) isCVRequest_Request() {}

func (*CVRequest_Misseddeliveryrequest) isCVRequest_Request() {}

func (*CVRequest_Downloadcompleterequest) isCVRequest_Request() {}

type CVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Reply:
	//	*CVReply_Videoreply
	//	*CVReply_Status
	Reply isCVReply_Reply `protobuf_oneof:"reply"`
}

func (x *CVReply) Reset() {
	*x = CVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CVReply) ProtoMessage() {}

func (x *CVReply) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CVReply.ProtoReflect.Descriptor instead.
func (*CVReply) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{13}
}

func (m *CVReply) GetReply() isCVReply_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *CVReply) GetVideoreply() *VideoReply {
	if x, ok := x.GetReply().(*CVReply_Videoreply); ok {
		return x.Videoreply
	}
	return nil
}

func (x *CVReply) GetStatus() *StatusReply {
	if x, ok := x.GetReply().(*CVReply_Status); ok {
		return x.Status
	}
	return nil
}

type isCVReply_Reply interface {
	isCVReply_Reply()
}

type CVReply_Videoreply struct {
	Videoreply *VideoReply `protobuf:"bytes,1,opt,name=videoreply,proto3,oneof"`
}

type CVReply_Status struct {
	Status *StatusReply `protobuf:"bytes,2,opt,name=status,proto3,oneof"`
}

func (*CVReply_Videoreply) isCVReply_Reply() {}

func (*CVReply_Status) isCVReply_Reply() {}

type ModelUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId string            `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Model  map[int64]float64 `protobuf:"bytes,2,rep,name=model,proto3" json:"model,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *ModelUpdateRequest) Reset() {
	*x = ModelUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModelUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModelUpdateRequest) ProtoMessage() {}

func (x *ModelUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModelUpdateRequest.ProtoReflect.Descriptor instead.
func (*ModelUpdateRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{14}
}

func (x *ModelUpdateRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ModelUpdateRequest) GetModel() map[int64]float64 {
	if x != nil {
		return x.Model
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Update:
	//	*UpdateRequest_Modelupdate
	Update isUpdateRequest_Update `protobuf_oneof:"update"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_clairvoyant_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clairvoyant_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_clairvoyant_proto_rawDescGZIP(), []int{15}
}

func (m *UpdateRequest) GetUpdate() isUpdateRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (x *UpdateRequest) GetModelupdate() *ModelUpdateRequest {
	if x, ok := x.GetUpdate().(*UpdateRequest_Modelupdate); ok {
		return x.Modelupdate
	}
	return nil
}

type isUpdateRequest_Update interface {
	isUpdateRequest_Update()
}

type UpdateRequest_Modelupdate struct {
	Modelupdate *ModelUpdateRequest `protobuf:"bytes,1,opt,name=modelupdate,proto3,oneof"`
}

func (*UpdateRequest_Modelupdate) isUpdateRequest_Update() {}

var File_clairvoyant_proto protoreflect.FileDescriptor

var file_clairvoyant_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x22, 0xc2, 0x01, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x70, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x6e, 0x0a, 0x07, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x72, 0x0a, 0x0c, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72,
	0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x6e, 0x0a, 0x0a, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x01, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x73, 0x70, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x53, 0x0a, 0x05, 0x52, 0x6f, 0x75,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2f, 0x0a,
	0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0x71,
	0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72,
	0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x52, 0x05, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x22, 0x3b, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x72,
	0x6c, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x75, 0x72, 0x6c, 0x73, 0x22, 0x25,
	0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x15, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65,
	0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x22, 0x82, 0x03, 0x0a, 0x0f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x08, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61,
	0x6e, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x59, 0x0a, 0x0f, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0e, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x72, 0x72, 0x69, 0x76, 0x61, 0x6c, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x1a, 0x41, 0x0a, 0x13, 0x53, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4b, 0x0a, 0x0d, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x17, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x73, 0x12, 0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x95, 0x02, 0x0a, 0x09, 0x43,
	0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0c, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x15, 0x6d, 0x69, 0x73,
	0x73, 0x65, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72,
	0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15,
	0x6d, 0x69, 0x73, 0x73, 0x65, 0x64, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x60, 0x0a, 0x17, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x81, 0x01, 0x0a, 0x07, 0x43, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39,
	0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x6c, 0x61, 0x69,
	0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x07, 0x0a,
	0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xa9, 0x01, 0x0a, 0x12, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x5e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x0b, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72,
	0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x32, 0x5f, 0x0a, 0x10, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x4b, 0x0a, 0x13, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x2e,
	0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x63, 0x6c, 0x61, 0x69,
	0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x32, 0x4b, 0x0a, 0x08, 0x43, 0x56, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12,
	0x3f, 0x0a, 0x0f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x43, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74,
	0x2e, 0x43, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x63, 0x6c, 0x61,
	0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x43, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x32, 0x5f, 0x0a, 0x0a, 0x45, 0x64, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x51,
	0x0a, 0x15, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76,
	0x6f, 0x79, 0x61, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f, 0x79,
	0x61, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x63, 0x68, 0x2e, 0x65, 0x64, 0x75, 0x2f, 0x63, 0x73, 0x2d, 0x65, 0x70, 0x6c, 0x2f, 0x63, 0x6c,
	0x61, 0x69, 0x72, 0x76, 0x6f, 0x79, 0x61, 0x6e, 0x74, 0x32, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x2f, 0x63, 0x6c, 0x61, 0x69, 0x72, 0x76, 0x6f,
	0x79, 0x61, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_clairvoyant_proto_rawDescOnce sync.Once
	file_clairvoyant_proto_rawDescData = file_clairvoyant_proto_rawDesc
)

func file_clairvoyant_proto_rawDescGZIP() []byte {
	file_clairvoyant_proto_rawDescOnce.Do(func() {
		file_clairvoyant_proto_rawDescData = protoimpl.X.CompressGZIP(file_clairvoyant_proto_rawDescData)
	})
	return file_clairvoyant_proto_rawDescData
}

var file_clairvoyant_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_clairvoyant_proto_goTypes = []interface{}{
	(*NodeInfo)(nil),                // 0: clairvoyant.NodeInfo
	(*Segment)(nil),                 // 1: clairvoyant.Segment
	(*SegmentOwner)(nil),            // 2: clairvoyant.SegmentOwner
	(*Coordinate)(nil),              // 3: clairvoyant.Coordinate
	(*Route)(nil),                   // 4: clairvoyant.Route
	(*VideoRequest)(nil),            // 5: clairvoyant.VideoRequest
	(*VideoReply)(nil),              // 6: clairvoyant.VideoReply
	(*StatusReply)(nil),             // 7: clairvoyant.StatusReply
	(*MissedDeliveryRequest)(nil),   // 8: clairvoyant.MissedDeliveryRequest
	(*DownloadRequest)(nil),         // 9: clairvoyant.DownloadRequest
	(*DownloadReply)(nil),           // 10: clairvoyant.DownloadReply
	(*DownloadCompleteRequest)(nil), // 11: clairvoyant.DownloadCompleteRequest
	(*CVRequest)(nil),               // 12: clairvoyant.CVRequest
	(*CVReply)(nil),                 // 13: clairvoyant.CVReply
	(*ModelUpdateRequest)(nil),      // 14: clairvoyant.ModelUpdateRequest
	(*UpdateRequest)(nil),           // 15: clairvoyant.UpdateRequest
	nil,                             // 16: clairvoyant.DownloadRequest.SegmentSourcesEntry
	nil,                             // 17: clairvoyant.ModelUpdateRequest.ModelEntry
}
var file_clairvoyant_proto_depIdxs = []int32{
	3,  // 0: clairvoyant.NodeInfo.contact_points:type_name -> clairvoyant.Coordinate
	1,  // 1: clairvoyant.SegmentOwner.segment:type_name -> clairvoyant.Segment
	0,  // 2: clairvoyant.SegmentOwner.node_info:type_name -> clairvoyant.NodeInfo
	3,  // 3: clairvoyant.Route.points:type_name -> clairvoyant.Coordinate
	4,  // 4: clairvoyant.VideoRequest.route:type_name -> clairvoyant.Route
	1,  // 5: clairvoyant.MissedDeliveryRequest.segments:type_name -> clairvoyant.Segment
	1,  // 6: clairvoyant.DownloadRequest.segments:type_name -> clairvoyant.Segment
	16, // 7: clairvoyant.DownloadRequest.segment_sources:type_name -> clairvoyant.DownloadRequest.SegmentSourcesEntry
	3,  // 8: clairvoyant.DownloadRequest.contact_points:type_name -> clairvoyant.Coordinate
	5,  // 9: clairvoyant.CVRequest.videorequest:type_name -> clairvoyant.VideoRequest
	8,  // 10: clairvoyant.CVRequest.misseddeliveryrequest:type_name -> clairvoyant.MissedDeliveryRequest
	11, // 11: clairvoyant.CVRequest.downloadcompleterequest:type_name -> clairvoyant.DownloadCompleteRequest
	6,  // 12: clairvoyant.CVReply.videoreply:type_name -> clairvoyant.VideoReply
	7,  // 13: clairvoyant.CVReply.status:type_name -> clairvoyant.StatusReply
	17, // 14: clairvoyant.ModelUpdateRequest.model:type_name -> clairvoyant.ModelUpdateRequest.ModelEntry
	14, // 15: clairvoyant.UpdateRequest.modelupdate:type_name -> clairvoyant.ModelUpdateRequest
	15, // 16: clairvoyant.MonitoringServer.HandleUpdateRequest:input_type -> clairvoyant.UpdateRequest
	12, // 17: clairvoyant.CVServer.HandleCVRequest:input_type -> clairvoyant.CVRequest
	9,  // 18: clairvoyant.EdgeServer.HandleDownloadRequest:input_type -> clairvoyant.DownloadRequest
	7,  // 19: clairvoyant.MonitoringServer.HandleUpdateRequest:output_type -> clairvoyant.StatusReply
	13, // 20: clairvoyant.CVServer.HandleCVRequest:output_type -> clairvoyant.CVReply
	10, // 21: clairvoyant.EdgeServer.HandleDownloadRequest:output_type -> clairvoyant.DownloadReply
	19, // [19:22] is the sub-list for method output_type
	16, // [16:19] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_clairvoyant_proto_init() }
func file_clairvoyant_proto_init() {
	if File_clairvoyant_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_clairvoyant_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Segment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SegmentOwner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coordinate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MissedDeliveryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadCompleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModelUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_clairvoyant_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_clairvoyant_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*CVRequest_Videorequest)(nil),
		(*CVRequest_Misseddeliveryrequest)(nil),
		(*CVRequest_Downloadcompleterequest)(nil),
	}
	file_clairvoyant_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*CVReply_Videoreply)(nil),
		(*CVReply_Status)(nil),
	}
	file_clairvoyant_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*UpdateRequest_Modelupdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_clairvoyant_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_clairvoyant_proto_goTypes,
		DependencyIndexes: file_clairvoyant_proto_depIdxs,
		MessageInfos:      file_clairvoyant_proto_msgTypes,
	}.Build()
	File_clairvoyant_proto = out.File
	file_clairvoyant_proto_rawDesc = nil
	file_clairvoyant_proto_goTypes = nil
	file_clairvoyant_proto_depIdxs = nil
}
