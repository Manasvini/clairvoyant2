// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clairvoyant.proto

/*
Package clairvoyant is a generated protocol buffer package.

It is generated from these files:
	clairvoyant.proto

It has these top-level messages:
	NodeInfo
	Segment
	SegmentOwner
	Coordinate
	Route
	VideoRequest
	VideoReply
	StatusReply
	MissedDeliveryRequest
	DownloadRequest
	DownloadReply
	DownloadCompleteRequest
	CVRequest
	CVReply
	ModelUpdateRequest
	UpdateRequest
*/
package clairvoyant

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Edge Service interface
type NodeInfo struct {
	NodeId      string  `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	NodeIp      string  `protobuf:"bytes,2,opt,name=node_ip,json=nodeIp" json:"node_ip,omitempty"`
	ArrivalTime float64 `protobuf:"fixed64,3,opt,name=arrival_time,json=arrivalTime" json:"arrival_time,omitempty"`
	ContactTime float64 `protobuf:"fixed64,4,opt,name=contact_time,json=contactTime" json:"contact_time,omitempty"`
	// Fill other useful info
	ContactPoints []*Coordinate `protobuf:"bytes,5,rep,name=contact_points,json=contactPoints" json:"contact_points,omitempty"`
}

func (m *NodeInfo) Reset()                    { *m = NodeInfo{} }
func (m *NodeInfo) String() string            { return proto.CompactTextString(m) }
func (*NodeInfo) ProtoMessage()               {}
func (*NodeInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *NodeInfo) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeInfo) GetNodeIp() string {
	if m != nil {
		return m.NodeIp
	}
	return ""
}

func (m *NodeInfo) GetArrivalTime() float64 {
	if m != nil {
		return m.ArrivalTime
	}
	return 0
}

func (m *NodeInfo) GetContactTime() float64 {
	if m != nil {
		return m.ContactTime
	}
	return 0
}

func (m *NodeInfo) GetContactPoints() []*Coordinate {
	if m != nil {
		return m.ContactPoints
	}
	return nil
}

type Segment struct {
	SegmentId   string `protobuf:"bytes,1,opt,name=segment_id,json=segmentId" json:"segment_id,omitempty"`
	SegmentSize int32  `protobuf:"varint,2,opt,name=segment_size,json=segmentSize" json:"segment_size,omitempty"`
	SegmentName string `protobuf:"bytes,3,opt,name=segment_name,json=segmentName" json:"segment_name,omitempty"`
}

func (m *Segment) Reset()                    { *m = Segment{} }
func (m *Segment) String() string            { return proto.CompactTextString(m) }
func (*Segment) ProtoMessage()               {}
func (*Segment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Segment) GetSegmentId() string {
	if m != nil {
		return m.SegmentId
	}
	return ""
}

func (m *Segment) GetSegmentSize() int32 {
	if m != nil {
		return m.SegmentSize
	}
	return 0
}

func (m *Segment) GetSegmentName() string {
	if m != nil {
		return m.SegmentName
	}
	return ""
}

type SegmentOwner struct {
	Segment  *Segment  `protobuf:"bytes,1,opt,name=segment" json:"segment,omitempty"`
	NodeInfo *NodeInfo `protobuf:"bytes,2,opt,name=node_info,json=nodeInfo" json:"node_info,omitempty"`
}

func (m *SegmentOwner) Reset()                    { *m = SegmentOwner{} }
func (m *SegmentOwner) String() string            { return proto.CompactTextString(m) }
func (*SegmentOwner) ProtoMessage()               {}
func (*SegmentOwner) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SegmentOwner) GetSegment() *Segment {
	if m != nil {
		return m.Segment
	}
	return nil
}

func (m *SegmentOwner) GetNodeInfo() *NodeInfo {
	if m != nil {
		return m.NodeInfo
	}
	return nil
}

// Cloud service interface
type Coordinate struct {
	X        float64 `protobuf:"fixed64,1,opt,name=x" json:"x,omitempty"`
	Y        float64 `protobuf:"fixed64,2,opt,name=y" json:"y,omitempty"`
	Speed    float64 `protobuf:"fixed64,3,opt,name=speed" json:"speed,omitempty"`
	Time     float64 `protobuf:"fixed64,4,opt,name=time" json:"time,omitempty"`
	Distance float64 `protobuf:"fixed64,5,opt,name=distance" json:"distance,omitempty"`
}

func (m *Coordinate) Reset()                    { *m = Coordinate{} }
func (m *Coordinate) String() string            { return proto.CompactTextString(m) }
func (*Coordinate) ProtoMessage()               {}
func (*Coordinate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Coordinate) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Coordinate) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Coordinate) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

func (m *Coordinate) GetTime() float64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Coordinate) GetDistance() float64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type Route struct {
	RouteId int32         `protobuf:"varint,1,opt,name=route_id,json=routeId" json:"route_id,omitempty"`
	Points  []*Coordinate `protobuf:"bytes,2,rep,name=points" json:"points,omitempty"`
}

func (m *Route) Reset()                    { *m = Route{} }
func (m *Route) String() string            { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()               {}
func (*Route) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Route) GetRouteId() int32 {
	if m != nil {
		return m.RouteId
	}
	return 0
}

func (m *Route) GetPoints() []*Coordinate {
	if m != nil {
		return m.Points
	}
	return nil
}

type VideoRequest struct {
	VideoId   string `protobuf:"bytes,1,opt,name=video_id,json=videoId" json:"video_id,omitempty"`
	Route     *Route `protobuf:"bytes,2,opt,name=route" json:"route,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *VideoRequest) Reset()                    { *m = VideoRequest{} }
func (m *VideoRequest) String() string            { return proto.CompactTextString(m) }
func (*VideoRequest) ProtoMessage()               {}
func (*VideoRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *VideoRequest) GetVideoId() string {
	if m != nil {
		return m.VideoId
	}
	return ""
}

func (m *VideoRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

func (m *VideoRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type VideoReply struct {
	TokenId int64    `protobuf:"varint,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
	Urls    []string `protobuf:"bytes,2,rep,name=urls" json:"urls,omitempty"`
}

func (m *VideoReply) Reset()                    { *m = VideoReply{} }
func (m *VideoReply) String() string            { return proto.CompactTextString(m) }
func (*VideoReply) ProtoMessage()               {}
func (*VideoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *VideoReply) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *VideoReply) GetUrls() []string {
	if m != nil {
		return m.Urls
	}
	return nil
}

type StatusReply struct {
	Status string `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
}

func (m *StatusReply) Reset()                    { *m = StatusReply{} }
func (m *StatusReply) String() string            { return proto.CompactTextString(m) }
func (*StatusReply) ProtoMessage()               {}
func (*StatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *StatusReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type MissedDeliveryRequest struct {
	TokenId   int64      `protobuf:"varint,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
	Segments  []*Segment `protobuf:"bytes,2,rep,name=segments" json:"segments,omitempty"`
	NodeId    string     `protobuf:"bytes,3,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp" json:"timestamp,omitempty"`
}

func (m *MissedDeliveryRequest) Reset()                    { *m = MissedDeliveryRequest{} }
func (m *MissedDeliveryRequest) String() string            { return proto.CompactTextString(m) }
func (*MissedDeliveryRequest) ProtoMessage()               {}
func (*MissedDeliveryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *MissedDeliveryRequest) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *MissedDeliveryRequest) GetSegments() []*Segment {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *MissedDeliveryRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MissedDeliveryRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type DownloadRequest struct {
	TokenId        int64             `protobuf:"varint,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
	Segments       []*Segment        `protobuf:"bytes,2,rep,name=segments" json:"segments,omitempty"`
	SegmentSources map[string]string `protobuf:"bytes,3,rep,name=segment_sources,json=segmentSources" json:"segment_sources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ArrivalTime    int64             `protobuf:"varint,4,opt,name=arrival_time,json=arrivalTime" json:"arrival_time,omitempty"`
	ContactTime    float64           `protobuf:"fixed64,5,opt,name=contact_time,json=contactTime" json:"contact_time,omitempty"`
	ContactPoints  []*Coordinate     `protobuf:"bytes,6,rep,name=contact_points,json=contactPoints" json:"contact_points,omitempty"`
}

func (m *DownloadRequest) Reset()                    { *m = DownloadRequest{} }
func (m *DownloadRequest) String() string            { return proto.CompactTextString(m) }
func (*DownloadRequest) ProtoMessage()               {}
func (*DownloadRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *DownloadRequest) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *DownloadRequest) GetSegments() []*Segment {
	if m != nil {
		return m.Segments
	}
	return nil
}

func (m *DownloadRequest) GetSegmentSources() map[string]string {
	if m != nil {
		return m.SegmentSources
	}
	return nil
}

func (m *DownloadRequest) GetArrivalTime() int64 {
	if m != nil {
		return m.ArrivalTime
	}
	return 0
}

func (m *DownloadRequest) GetContactTime() float64 {
	if m != nil {
		return m.ContactTime
	}
	return 0
}

func (m *DownloadRequest) GetContactPoints() []*Coordinate {
	if m != nil {
		return m.ContactPoints
	}
	return nil
}

type DownloadReply struct {
	TokenId    int64    `protobuf:"varint,1,opt,name=token_id,json=tokenId" json:"token_id,omitempty"`
	SegmentIds []string `protobuf:"bytes,2,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	EvictedIds []string `protobuf:"bytes,3,rep,name=evicted_ids,json=evictedIds" json:"evicted_ids,omitempty"`
}

func (m *DownloadReply) Reset()                    { *m = DownloadReply{} }
func (m *DownloadReply) String() string            { return proto.CompactTextString(m) }
func (*DownloadReply) ProtoMessage()               {}
func (*DownloadReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *DownloadReply) GetTokenId() int64 {
	if m != nil {
		return m.TokenId
	}
	return 0
}

func (m *DownloadReply) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *DownloadReply) GetEvictedIds() []string {
	if m != nil {
		return m.EvictedIds
	}
	return nil
}

type DownloadCompleteRequest struct {
	SegmentIds []string `protobuf:"bytes,1,rep,name=segment_ids,json=segmentIds" json:"segment_ids,omitempty"`
	NodeId     string   `protobuf:"bytes,2,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
}

func (m *DownloadCompleteRequest) Reset()                    { *m = DownloadCompleteRequest{} }
func (m *DownloadCompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*DownloadCompleteRequest) ProtoMessage()               {}
func (*DownloadCompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *DownloadCompleteRequest) GetSegmentIds() []string {
	if m != nil {
		return m.SegmentIds
	}
	return nil
}

func (m *DownloadCompleteRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

type CVRequest struct {
	// Types that are valid to be assigned to Request:
	//	*CVRequest_Videorequest
	//	*CVRequest_Misseddeliveryrequest
	//	*CVRequest_Downloadcompleterequest
	Request isCVRequest_Request `protobuf_oneof:"request"`
}

func (m *CVRequest) Reset()                    { *m = CVRequest{} }
func (m *CVRequest) String() string            { return proto.CompactTextString(m) }
func (*CVRequest) ProtoMessage()               {}
func (*CVRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

type isCVRequest_Request interface{ isCVRequest_Request() }

type CVRequest_Videorequest struct {
	Videorequest *VideoRequest `protobuf:"bytes,1,opt,name=videorequest,oneof"`
}
type CVRequest_Misseddeliveryrequest struct {
	Misseddeliveryrequest *MissedDeliveryRequest `protobuf:"bytes,2,opt,name=misseddeliveryrequest,oneof"`
}
type CVRequest_Downloadcompleterequest struct {
	Downloadcompleterequest *DownloadCompleteRequest `protobuf:"bytes,3,opt,name=downloadcompleterequest,oneof"`
}

func (*CVRequest_Videorequest) isCVRequest_Request()            {}
func (*CVRequest_Misseddeliveryrequest) isCVRequest_Request()   {}
func (*CVRequest_Downloadcompleterequest) isCVRequest_Request() {}

func (m *CVRequest) GetRequest() isCVRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (m *CVRequest) GetVideorequest() *VideoRequest {
	if x, ok := m.GetRequest().(*CVRequest_Videorequest); ok {
		return x.Videorequest
	}
	return nil
}

func (m *CVRequest) GetMisseddeliveryrequest() *MissedDeliveryRequest {
	if x, ok := m.GetRequest().(*CVRequest_Misseddeliveryrequest); ok {
		return x.Misseddeliveryrequest
	}
	return nil
}

func (m *CVRequest) GetDownloadcompleterequest() *DownloadCompleteRequest {
	if x, ok := m.GetRequest().(*CVRequest_Downloadcompleterequest); ok {
		return x.Downloadcompleterequest
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CVRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CVRequest_OneofMarshaler, _CVRequest_OneofUnmarshaler, _CVRequest_OneofSizer, []interface{}{
		(*CVRequest_Videorequest)(nil),
		(*CVRequest_Misseddeliveryrequest)(nil),
		(*CVRequest_Downloadcompleterequest)(nil),
	}
}

func _CVRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CVRequest)
	// request
	switch x := m.Request.(type) {
	case *CVRequest_Videorequest:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Videorequest); err != nil {
			return err
		}
	case *CVRequest_Misseddeliveryrequest:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Misseddeliveryrequest); err != nil {
			return err
		}
	case *CVRequest_Downloadcompleterequest:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Downloadcompleterequest); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CVRequest.Request has unexpected type %T", x)
	}
	return nil
}

func _CVRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CVRequest)
	switch tag {
	case 1: // request.videorequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoRequest)
		err := b.DecodeMessage(msg)
		m.Request = &CVRequest_Videorequest{msg}
		return true, err
	case 2: // request.misseddeliveryrequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(MissedDeliveryRequest)
		err := b.DecodeMessage(msg)
		m.Request = &CVRequest_Misseddeliveryrequest{msg}
		return true, err
	case 3: // request.downloadcompleterequest
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DownloadCompleteRequest)
		err := b.DecodeMessage(msg)
		m.Request = &CVRequest_Downloadcompleterequest{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CVRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CVRequest)
	// request
	switch x := m.Request.(type) {
	case *CVRequest_Videorequest:
		s := proto.Size(x.Videorequest)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CVRequest_Misseddeliveryrequest:
		s := proto.Size(x.Misseddeliveryrequest)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CVRequest_Downloadcompleterequest:
		s := proto.Size(x.Downloadcompleterequest)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type CVReply struct {
	// Types that are valid to be assigned to Reply:
	//	*CVReply_Videoreply
	//	*CVReply_Status
	Reply isCVReply_Reply `protobuf_oneof:"reply"`
}

func (m *CVReply) Reset()                    { *m = CVReply{} }
func (m *CVReply) String() string            { return proto.CompactTextString(m) }
func (*CVReply) ProtoMessage()               {}
func (*CVReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

type isCVReply_Reply interface{ isCVReply_Reply() }

type CVReply_Videoreply struct {
	Videoreply *VideoReply `protobuf:"bytes,1,opt,name=videoreply,oneof"`
}
type CVReply_Status struct {
	Status *StatusReply `protobuf:"bytes,2,opt,name=status,oneof"`
}

func (*CVReply_Videoreply) isCVReply_Reply() {}
func (*CVReply_Status) isCVReply_Reply()     {}

func (m *CVReply) GetReply() isCVReply_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *CVReply) GetVideoreply() *VideoReply {
	if x, ok := m.GetReply().(*CVReply_Videoreply); ok {
		return x.Videoreply
	}
	return nil
}

func (m *CVReply) GetStatus() *StatusReply {
	if x, ok := m.GetReply().(*CVReply_Status); ok {
		return x.Status
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*CVReply) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _CVReply_OneofMarshaler, _CVReply_OneofUnmarshaler, _CVReply_OneofSizer, []interface{}{
		(*CVReply_Videoreply)(nil),
		(*CVReply_Status)(nil),
	}
}

func _CVReply_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*CVReply)
	// reply
	switch x := m.Reply.(type) {
	case *CVReply_Videoreply:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Videoreply); err != nil {
			return err
		}
	case *CVReply_Status:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Status); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("CVReply.Reply has unexpected type %T", x)
	}
	return nil
}

func _CVReply_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*CVReply)
	switch tag {
	case 1: // reply.videoreply
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(VideoReply)
		err := b.DecodeMessage(msg)
		m.Reply = &CVReply_Videoreply{msg}
		return true, err
	case 2: // reply.status
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(StatusReply)
		err := b.DecodeMessage(msg)
		m.Reply = &CVReply_Status{msg}
		return true, err
	default:
		return false, nil
	}
}

func _CVReply_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*CVReply)
	// reply
	switch x := m.Reply.(type) {
	case *CVReply_Videoreply:
		s := proto.Size(x.Videoreply)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case *CVReply_Status:
		s := proto.Size(x.Status)
		n += proto.SizeVarint(2<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type ModelUpdateRequest struct {
	NodeId string            `protobuf:"bytes,1,opt,name=node_id,json=nodeId" json:"node_id,omitempty"`
	Model  map[int64]float64 `protobuf:"bytes,2,rep,name=model" json:"model,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"fixed64,2,opt,name=value"`
}

func (m *ModelUpdateRequest) Reset()                    { *m = ModelUpdateRequest{} }
func (m *ModelUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*ModelUpdateRequest) ProtoMessage()               {}
func (*ModelUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ModelUpdateRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *ModelUpdateRequest) GetModel() map[int64]float64 {
	if m != nil {
		return m.Model
	}
	return nil
}

type UpdateRequest struct {
	// Types that are valid to be assigned to Update:
	//	*UpdateRequest_Modelupdate
	Update isUpdateRequest_Update `protobuf_oneof:"update"`
}

func (m *UpdateRequest) Reset()                    { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()               {}
func (*UpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

type isUpdateRequest_Update interface{ isUpdateRequest_Update() }

type UpdateRequest_Modelupdate struct {
	Modelupdate *ModelUpdateRequest `protobuf:"bytes,1,opt,name=modelupdate,oneof"`
}

func (*UpdateRequest_Modelupdate) isUpdateRequest_Update() {}

func (m *UpdateRequest) GetUpdate() isUpdateRequest_Update {
	if m != nil {
		return m.Update
	}
	return nil
}

func (m *UpdateRequest) GetModelupdate() *ModelUpdateRequest {
	if x, ok := m.GetUpdate().(*UpdateRequest_Modelupdate); ok {
		return x.Modelupdate
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateRequest_OneofMarshaler, _UpdateRequest_OneofUnmarshaler, _UpdateRequest_OneofSizer, []interface{}{
		(*UpdateRequest_Modelupdate)(nil),
	}
}

func _UpdateRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateRequest)
	// update
	switch x := m.Update.(type) {
	case *UpdateRequest_Modelupdate:
		b.EncodeVarint(1<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Modelupdate); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("UpdateRequest.Update has unexpected type %T", x)
	}
	return nil
}

func _UpdateRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateRequest)
	switch tag {
	case 1: // update.modelupdate
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ModelUpdateRequest)
		err := b.DecodeMessage(msg)
		m.Update = &UpdateRequest_Modelupdate{msg}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateRequest)
	// update
	switch x := m.Update.(type) {
	case *UpdateRequest_Modelupdate:
		s := proto.Size(x.Modelupdate)
		n += proto.SizeVarint(1<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*NodeInfo)(nil), "clairvoyant.NodeInfo")
	proto.RegisterType((*Segment)(nil), "clairvoyant.Segment")
	proto.RegisterType((*SegmentOwner)(nil), "clairvoyant.SegmentOwner")
	proto.RegisterType((*Coordinate)(nil), "clairvoyant.Coordinate")
	proto.RegisterType((*Route)(nil), "clairvoyant.Route")
	proto.RegisterType((*VideoRequest)(nil), "clairvoyant.VideoRequest")
	proto.RegisterType((*VideoReply)(nil), "clairvoyant.VideoReply")
	proto.RegisterType((*StatusReply)(nil), "clairvoyant.StatusReply")
	proto.RegisterType((*MissedDeliveryRequest)(nil), "clairvoyant.MissedDeliveryRequest")
	proto.RegisterType((*DownloadRequest)(nil), "clairvoyant.DownloadRequest")
	proto.RegisterType((*DownloadReply)(nil), "clairvoyant.DownloadReply")
	proto.RegisterType((*DownloadCompleteRequest)(nil), "clairvoyant.DownloadCompleteRequest")
	proto.RegisterType((*CVRequest)(nil), "clairvoyant.CVRequest")
	proto.RegisterType((*CVReply)(nil), "clairvoyant.CVReply")
	proto.RegisterType((*ModelUpdateRequest)(nil), "clairvoyant.ModelUpdateRequest")
	proto.RegisterType((*UpdateRequest)(nil), "clairvoyant.UpdateRequest")
}

func init() { proto.RegisterFile("clairvoyant.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 995 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x8e, 0xd7, 0xeb, 0xfc, 0x9c, 0xec, 0x76, 0xcb, 0x74, 0xb7, 0x49, 0xa3, 0xa2, 0x2e, 0x16,
	0x48, 0x2b, 0x24, 0x92, 0x2a, 0xdc, 0x14, 0x90, 0x58, 0xba, 0x69, 0xa5, 0x44, 0xd5, 0x16, 0x98,
	0xc0, 0x4a, 0xf4, 0x82, 0xc5, 0xf5, 0x9c, 0xa6, 0x56, 0x9d, 0x19, 0xd7, 0x9e, 0xa4, 0x75, 0xef,
	0xe0, 0x1d, 0xb8, 0xe2, 0x09, 0x78, 0x0d, 0x9e, 0x0c, 0x79, 0x66, 0x1c, 0xdb, 0xd9, 0x64, 0x0b,
	0x17, 0xbd, 0x9b, 0x73, 0xfc, 0x9d, 0xef, 0xfc, 0xcc, 0x7c, 0x27, 0x81, 0x8f, 0xfc, 0xd0, 0x0b,
	0xe2, 0xa5, 0x48, 0x3d, 0x2e, 0xfb, 0x51, 0x2c, 0xa4, 0x20, 0xed, 0x92, 0xcb, 0xfd, 0xc7, 0x82,
	0xe6, 0x53, 0xc1, 0x70, 0xc2, 0x5f, 0x08, 0xd2, 0x81, 0x06, 0x17, 0x0c, 0x2f, 0x03, 0xd6, 0xb5,
	0x8e, 0xad, 0x93, 0x16, 0xad, 0x67, 0xe6, 0x84, 0x15, 0x1f, 0xa2, 0xee, 0x4e, 0xe9, 0x43, 0x44,
	0x3e, 0x81, 0x3d, 0x2f, 0x8e, 0x83, 0xa5, 0x17, 0x5e, 0xca, 0x60, 0x8e, 0x5d, 0xfb, 0xd8, 0x3a,
	0xb1, 0x68, 0xdb, 0xf8, 0x7e, 0x0a, 0xe6, 0x98, 0x41, 0x7c, 0xc1, 0xa5, 0xe7, 0x4b, 0x0d, 0xd9,
	0xd5, 0x10, 0xe3, 0x53, 0x90, 0x6f, 0xe1, 0x46, 0x0e, 0x89, 0x44, 0xc0, 0x65, 0xd2, 0x75, 0x8e,
	0xed, 0x93, 0xf6, 0xb0, 0xd3, 0x2f, 0x57, 0x3f, 0x12, 0x22, 0x66, 0x01, 0xf7, 0x24, 0xd2, 0x7d,
	0x03, 0xff, 0x41, 0xa1, 0x5d, 0x0e, 0x8d, 0x29, 0xce, 0xe6, 0xc8, 0x25, 0xf9, 0x18, 0x20, 0xd1,
	0xc7, 0xa2, 0x8b, 0x96, 0xf1, 0x4c, 0x58, 0x56, 0x4c, 0xfe, 0x39, 0x09, 0xde, 0xa1, 0xea, 0xc6,
	0xa1, 0x6d, 0xe3, 0x9b, 0x06, 0xef, 0xb0, 0x0c, 0xe1, 0x9e, 0x69, 0xa9, 0xb5, 0x82, 0x3c, 0xf5,
	0xe6, 0xe8, 0xc6, 0xb0, 0x67, 0xf2, 0x7d, 0xff, 0x86, 0x63, 0x4c, 0xfa, 0xd0, 0x30, 0x9f, 0x55,
	0xc6, 0xf6, 0xf0, 0xb0, 0x52, 0xb8, 0xc1, 0xd2, 0x1c, 0x44, 0x86, 0xd0, 0xd2, 0xe3, 0xe4, 0x2f,
	0x84, 0x2a, 0xa1, 0x3d, 0x3c, 0xaa, 0x44, 0xe4, 0x37, 0x42, 0x9b, 0xdc, 0x9c, 0x5c, 0x0e, 0x50,
	0x0c, 0x80, 0xec, 0x81, 0xf5, 0x56, 0xe5, 0xb2, 0xa8, 0xf5, 0x36, 0xb3, 0x52, 0xc5, 0x63, 0x51,
	0x2b, 0x25, 0x87, 0xe0, 0x24, 0x11, 0x22, 0x33, 0x97, 0xa1, 0x0d, 0x42, 0x60, 0xb7, 0x34, 0x7e,
	0x75, 0x26, 0x3d, 0x68, 0xb2, 0x20, 0x91, 0x1e, 0xf7, 0xb1, 0xeb, 0x28, 0xff, 0xca, 0x76, 0xa7,
	0xe0, 0x50, 0xb1, 0x90, 0x48, 0xee, 0x40, 0x33, 0xce, 0x0e, 0xf9, 0x3c, 0x1d, 0xda, 0x50, 0xf6,
	0x84, 0x91, 0x01, 0xd4, 0xcd, 0x7d, 0xed, 0x5c, 0x7f, 0x5f, 0x06, 0xe6, 0xbe, 0x86, 0xbd, 0x8b,
	0x80, 0xa1, 0xa0, 0xf8, 0x7a, 0x81, 0x89, 0xcc, 0xb8, 0x97, 0x99, 0x5d, 0xdc, 0x55, 0x43, 0xd9,
	0x13, 0x46, 0x4e, 0xc0, 0x51, 0x69, 0xcc, 0x7c, 0x48, 0x85, 0x5a, 0x55, 0x46, 0x35, 0x80, 0xdc,
	0x85, 0x56, 0xd6, 0x4d, 0x22, 0xbd, 0x79, 0xa4, 0x7a, 0xb6, 0x69, 0xe1, 0x70, 0xbf, 0x01, 0x30,
	0x29, 0xa3, 0x30, 0xcd, 0x12, 0x4a, 0xf1, 0x0a, 0x79, 0x9e, 0xd0, 0xa6, 0x0d, 0x65, 0x4f, 0xd4,
	0x80, 0x16, 0x71, 0xa8, 0x5b, 0x69, 0x51, 0x75, 0x76, 0x3f, 0x83, 0xf6, 0x54, 0x7a, 0x72, 0x91,
	0xe8, 0xe8, 0xdb, 0x50, 0x4f, 0x94, 0x99, 0xcb, 0x43, 0x5b, 0xee, 0x5f, 0x16, 0x1c, 0x9d, 0x07,
	0x49, 0x82, 0xec, 0x11, 0x86, 0xc1, 0x12, 0xe3, 0xb4, 0xd4, 0xe0, 0xb6, 0x7c, 0xf7, 0xa1, 0x69,
	0xde, 0x43, 0x3e, 0xbe, 0xcd, 0xaf, 0x66, 0x85, 0x2a, 0xcb, 0xd3, 0xae, 0xc8, 0xb3, 0x32, 0x81,
	0xdd, 0xf5, 0x09, 0xfc, 0x61, 0xc3, 0xc1, 0x23, 0xf1, 0x86, 0x87, 0xc2, 0x63, 0x1f, 0xa4, 0xae,
	0x5f, 0xe0, 0x60, 0x25, 0x2a, 0xb1, 0x88, 0x7d, 0x4c, 0xba, 0xb6, 0x0a, 0xbc, 0x5f, 0x09, 0x5c,
	0xab, 0x21, 0x27, 0x9a, 0xea, 0x90, 0xc7, 0x5c, 0xc6, 0x29, 0xbd, 0x91, 0x54, 0x9c, 0x57, 0xf6,
	0x8b, 0x6e, 0xee, 0xda, 0xfd, 0xe2, 0xfc, 0x97, 0xfd, 0x52, 0xff, 0x3f, 0xfb, 0xa5, 0xf7, 0x10,
	0x6e, 0x6d, 0x28, 0x96, 0xdc, 0x04, 0xfb, 0x15, 0xa6, 0xe6, 0x2d, 0x64, 0xc7, 0x4c, 0x7a, 0x4b,
	0x2f, 0x5c, 0xa0, 0xd9, 0x92, 0xda, 0xf8, 0x7a, 0xe7, 0x81, 0xe5, 0x86, 0xb0, 0x5f, 0xf4, 0xff,
	0x9e, 0x97, 0x78, 0x0f, 0xda, 0xc5, 0x0e, 0xcb, 0x1f, 0x24, 0xac, 0x96, 0x58, 0x92, 0x01, 0x70,
	0x19, 0xf8, 0x12, 0x99, 0x02, 0xd8, 0x1a, 0x60, 0x5c, 0x13, 0x96, 0xb8, 0x53, 0xe8, 0xe4, 0xd9,
	0x46, 0x62, 0x1e, 0x85, 0x28, 0x31, 0xbf, 0xf9, 0x35, 0x72, 0xeb, 0x0a, 0x79, 0xe9, 0x95, 0x95,
	0x77, 0x3d, 0x73, 0xff, 0xdc, 0x81, 0xd6, 0xe8, 0x22, 0xe7, 0x39, 0x85, 0x3d, 0x25, 0xd5, 0x58,
	0xdb, 0x66, 0xf1, 0xdd, 0xa9, 0x4c, 0xb4, 0xac, 0xf5, 0x71, 0x8d, 0x56, 0x02, 0xc8, 0x33, 0x38,
	0x9a, 0x2b, 0xcd, 0x30, 0xa3, 0x99, 0x9c, 0x49, 0x0b, 0xde, 0xad, 0x30, 0x6d, 0x54, 0xd7, 0xb8,
	0x46, 0x37, 0x53, 0x90, 0xdf, 0xa0, 0xc3, 0x4c, 0xff, 0xbe, 0xe9, 0x3f, 0x67, 0xb7, 0x15, 0xfb,
	0xa7, 0x1b, 0x5f, 0xe6, 0xda, 0xac, 0xc6, 0x35, 0xba, 0x8d, 0xe6, 0xac, 0x05, 0x0d, 0x73, 0x74,
	0x7f, 0xb7, 0xa0, 0x91, 0xcd, 0x25, 0xbb, 0xd5, 0xaf, 0x00, 0x4c, 0x93, 0x51, 0x98, 0x9a, 0x99,
	0x74, 0x36, 0xcd, 0x24, 0x0a, 0xd3, 0x71, 0x8d, 0x96, 0xc0, 0x64, 0xb8, 0x5a, 0x2e, 0x7a, 0x00,
	0xdd, 0xaa, 0xea, 0x8a, 0x35, 0x34, 0xae, 0xe5, 0x8b, 0xe7, 0xac, 0x01, 0x8e, 0x0a, 0x76, 0xff,
	0xb6, 0x80, 0x9c, 0x0b, 0x86, 0xe1, 0xcf, 0x11, 0xf3, 0x8a, 0xcb, 0xde, 0xfa, 0x83, 0xfe, 0x1d,
	0x38, 0xf3, 0x0c, 0x6e, 0x14, 0xfe, 0x79, 0x75, 0xd8, 0x57, 0x88, 0xb4, 0x4b, 0x4b, 0x54, 0x07,
	0xf6, 0x1e, 0x00, 0x14, 0xce, 0xb2, 0x14, 0xec, 0x0d, 0x52, 0xb0, 0xca, 0x52, 0xf8, 0x15, 0xf6,
	0xab, 0x55, 0x8e, 0xa0, 0xad, 0x38, 0x17, 0xca, 0x6b, 0xa6, 0x76, 0xef, 0x3d, 0x25, 0x8d, 0x6b,
	0xb4, 0x1c, 0x75, 0xd6, 0x84, 0xba, 0x3e, 0x0d, 0x2f, 0xe1, 0xe6, 0xb9, 0xe0, 0x81, 0x14, 0x71,
	0xc0, 0x67, 0x53, 0x8c, 0x97, 0x18, 0x93, 0x27, 0x70, 0x6b, 0xec, 0x71, 0x16, 0x62, 0x35, 0x73,
	0xaf, 0x92, 0xa4, 0xf2, 0xad, 0xb7, 0x75, 0xfe, 0xc3, 0x27, 0xd0, 0x1c, 0x5d, 0x18, 0xe2, 0x53,
	0x38, 0xd0, 0xc4, 0x85, 0x32, 0x6e, 0x57, 0xb7, 0x4a, 0xee, 0xef, 0x1d, 0x5e, 0xf1, 0x67, 0x64,
	0x97, 0x00, 0x8f, 0xd9, 0x0c, 0x0d, 0xdd, 0x8f, 0x70, 0xa4, 0xe9, 0xd6, 0x17, 0xf6, 0xdd, 0xeb,
	0x56, 0x69, 0xaf, 0xb7, 0xe5, 0x6b, 0x14, 0xa6, 0x67, 0x0f, 0x9f, 0x9d, 0xce, 0x02, 0xf9, 0x72,
	0xf1, 0xbc, 0x3f, 0xf3, 0x24, 0xfa, 0x2f, 0xfb, 0xc8, 0x16, 0x03, 0x3f, 0xf9, 0x02, 0xa3, 0x70,
	0x50, 0x8a, 0x1a, 0x0e, 0x92, 0xd8, 0x1f, 0xf8, 0x61, 0x90, 0x6d, 0x86, 0x99, 0x28, 0x7f, 0x7a,
	0x5e, 0x57, 0x7f, 0x1c, 0xbf, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x37, 0xf0, 0xeb, 0x70, 0x4d,
	0x0a, 0x00, 0x00,
}
